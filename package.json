{
  "name": "vscode-consul",
  "displayName": "VSConsul",
  "description": "Consul integration for VS Code",
  "version": "0.1.2",
  "engines": {
    "vscode": "^1.86.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sankooc/vscode-consul.git"
  },
  "categories": [
    "Other"
  ],
  "icon": "resources/icon128.png",
  "keywords": [
    "Consul",
    "Service Discovery"
  ],
  "publisher": "sankooc",
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "consul-explorer",
          "title": "Consul Explorer",
          "icon": "resources/consul.svg"
        }
      ]
    },
    "views": {
      "consul-explorer": [
        {
          "id": "consulInstances",
          "name": "Consul Instances"
        }
      ]
    },
    "commands": [
      {
        "command": "consul.addInstance",
        "title": "%consul.addInstance.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.check.register",
        "title": "%consul.check.register.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.check.deregister",
        "title": "%consul.check.deregister.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.agent.check.view",
        "title": "%consul.agent.check.view.title%",
        "icon": "$(preview)"
      },
      {
        "command": "consul.removeInstance",
        "title": "%consul.removeInstance.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.connect",
        "title": "%consul.connect.title%",
        "icon": "$(plug)"
      },
      {
        "command": "consul.disconnect",
        "title": "%consul.disconnect.title%",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "consul.agent.self",
        "title": "%consul.agent.title%",
        "icon": "$(info)"
      },
      {
        "command": "consul.refresh",
        "title": "%consul.refresh.title%",
        "icon": "$(refresh)"
      },
      {
        "command": "consul.refreshKV",
        "title": "%consul.refreshKV.title%",
        "icon": "$(refresh)"
      },
      {
        "command": "consul.addKV",
        "title": "%consul.addKV.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.editKV",
        "title": "%consul.editKV.title%",
        "icon": "$(edit)"
      },
      {
        "command": "consul.deleteKV",
        "title": "%consul.deleteKV.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.configureInstance",
        "title": "%consul.configureInstance.title%",
        "icon": "$(gear)"
      },
      {
        "command": "consul.deleteKVPair",
        "title": "%consul.deleteKVPair.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.service.view",
        "icon": "$(bracket)",
        "title": "%consul.service.view.title%"
      },
      {
        "command": "consul.exportAllKV",
        "title": "%consul.exportAllKV.title%",
        "icon": "$(clone)"
      },
      {
        "command": "consul.importAllKV",
        "title": "%consul.importAllKV.title%",
        "icon": "$(replace)"
      },
      {
        "command": "consul.acl.policy.add",
        "title": "%consul.acl.policy.add.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.acl.policy.del",
        "title": "%consul.acl.policy.del.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.acl.token.add",
        "title": "%consul.acl.token.add.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.acl.token.del",
        "title": "%consul.acl.token.del.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.acl.role.add",
        "title": "%consul.acl.role.add.title%",
        "icon": "$(add)"
      },
      {
        "command": "consul.acl.role.del",
        "title": "%consul.acl.role.del.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.acl.templatedPolicy.view.schema",
        "title": "%consul.acl.templatedPolicy.view.schema.title%",
        "icon": "$(circuit-board)"
      },
      {
        "command": "consul.acl.templatedPolicy.view.template",
        "title": "%consul.acl.templatedPolicy.view.template.title%",
        "icon": "$(circuit-board)"
      },
      {
        "command": "consul.snapshot",
        "title": "%consul.snapshot%",
        "icon": "$(save)"
      },
      {
        "command": "consul.restore",
        "title": "%consul.restore%",
        "icon": "$(sync)"
      },
      {
        "command": "consul.service.register",
        "title": "Register Service",
        "icon": "$(add)"
      },
      {
        "command": "consul.service.deregister",
        "title": "%consul.service.deregister.title%",
        "icon": "$(trash)"
      },
      {
        "command": "consul.agent.service.view",
        "title": "%consul.agent.service.view.title%",
        "icon": "$(preview)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "consul.addInstance",
          "when": "view == consulInstances",
          "group": "navigation"
        },
        {
          "command": "consul.refresh",
          "when": "view == consulInstances",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "consul.check.register",
          "when": "viewItem == checkRoot",
          "group": "inline"
        },
        {
          "command": "consul.check.deregister",
          "when": "viewItem == checkLeaf",
          "group": "inline"
        },
        {
          "command": "consul.agent.check.view",
          "when": "viewItem == checkLeaf",
          "group": "navigation"
        },
        {
          "command": "consul.removeInstance",
          "when": "viewItem == consulInstanceDisconnected",
          "group": "inline"
        },
        {
          "command": "consul.connect",
          "when": "viewItem == consulInstanceDisconnected",
          "group": "inline"
        },
        {
          "command": "consul.disconnect",
          "when": "viewItem == consulInstanceConnected",
          "group": "inline"
        },
        {
          "command": "consul.agent.self",
          "when": "viewItem == consulInstanceConnected",
          "group": "inline"
        },
        {
          "command": "consul.configureInstance",
          "when": "viewItem == consulInstanceDisconnected",
          "group": "inline"
        },
        {
          "command": "consul.snapshot",
          "when": "viewItem == consulInstanceConnected",
          "group": "navigation"
        },
        {
          "command": "consul.restore",
          "when": "viewItem == consulInstanceConnected",
          "group": "navigation"
        },
        {
          "command": "consul.addKV",
          "when": "viewItem == kvRoot",
          "group": "inline"
        },
        {
          "command": "consul.editKV",
          "when": "viewItem == kvItem",
          "group": "inline"
        },
        {
          "command": "consul.deleteKV",
          "when": "viewItem == kvItem",
          "group": "inline"
        },
        {
          "command": "consul.refreshKV",
          "when": "viewItem == kvRoot",
          "group": "inline"
        },
        {
          "command": "consul.deleteKVPair",
          "when": "viewItem == kvLeaf",
          "group": "inline"
        },
        {
          "command": "consul.service.view",
          "when": "viewItem == catalogItemWithDetails",
          "group": "inline"
        },
        {
          "command": "consul.exportAllKV",
          "when": "viewItem == kvRoot",
          "group": "navigation"
        },
        {
          "command": "consul.importAllKV",
          "when": "viewItem == kvRoot",
          "group": "navigation"
        },
        {
          "command": "consul.acl.policy.add",
          "when": "viewItem == policy_root",
          "group": "inline"
        },
        {
          "command": "consul.acl.policy.del",
          "when": "viewItem == policy_leaf",
          "group": "inline"
        },
        {
          "command": "consul.acl.token.add",
          "when": "viewItem == token_root",
          "group": "inline"
        },
        {
          "command": "consul.acl.token.del",
          "when": "viewItem == token_leaf",
          "group": "inline"
        },
        {
          "command": "consul.acl.role.add",
          "when": "viewItem == role_root",
          "group": "inline"
        },
        {
          "command": "consul.acl.role.del",
          "when": "viewItem == role_leaf",
          "group": "inline"
        },
        {
          "command": "consul.acl.templatedPolicy.view.schema",
          "when": "viewItem == tp_leaf",
          "group": "navigation"
        },
        {
          "command": "consul.acl.templatedPolicy.view.template",
          "when": "viewItem == tp_leaf",
          "group": "navigation"
        },
        {
          "command": "consul.service.register",
          "when": "viewItem == serviceRoot",
          "group": "inline"
        },
        {
          "command": "consul.service.deregister",
          "when": "viewItem == serviceLeaf",
          "group": "inline"
        },
        {
          "command": "consul.agent.service.view",
          "when": "viewItem == serviceLeaf",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "format": "prettier -w ./src",
    "build-webview": "esbuild media/webview/toolkit.js --bundle --outfile=media/webview/toolkit.bundle.js --format=esm --platform=browser"
  },
  "vsce": {
    "dependencies": false,
    "pnpm": true
  },
  "dependencies": {
    "consul": "github:sankooc/node-consul#2.0.1-acl",
    "handlebars": "^4.7.8"
  },
  "devDependencies": {
    "@types/consul": "^0.40.3",
    "@types/mocha": "^10.0.6",
    "@types/node": "20.x",
    "@types/vscode": "^1.86.2",
    "@typescript-eslint/eslint-plugin": "^8.31.0",
    "@typescript-eslint/parser": "^8.31.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "esbuild": ">=0.25.0",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "typescript": "^5.4.5"
  }
}
